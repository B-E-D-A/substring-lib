# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  compile_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ clang++ ]

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Compile
        working-directory: ${{github.workspace}}/build
        run: cmake --build .

      - name: Test
        working-directory: ${{github.workspace}}/build/lib
        run: ctest

  clang-format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: clang-format --version
      - run: for file in $(find . -iname '*.cpp' -or -iname '*.c' -or -iname '*.h' -and -not -iname 'doctest.h' ); do diff -u <(cat "$file") <(clang-format "$file") || exit 1; done

#  clang-tidy:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: clang-tidy --version
#      - run: clang-tidy $(find . -path '*/CMakeFiles/*' -prune -or \( -iname '*.cpp' -or -iname '*.h' -and -not -iname 'doctest.h' \) -print)





